;; Analyzed by ClojureScript 1.7.170
{:name hyper.js, :doc nil, :excludes #{}, :use-macros {js-iter hyper.macros}, :require-macros {hyper.macros hyper.macros}, :uses nil, :requires {gs goog.style, goog.style goog.style}, :imports nil, :defs {kw->str {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 27, :column 7, :end-line 27, :end-column 14, :arglists (quote ([k]))}, :name hyper.js/kw->str, :variadic false, :file "src/out/hyper/js.cljs", :end-column 14, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, new-constructor {:name hyper.js/new-constructor, :file "src/out/hyper/js.cljs", :line 57, :column 1, :end-line 57, :end-column 21, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 57, :column 6, :end-line 57, :end-column 21}}, remove! {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 52, :column 7, :end-line 52, :end-column 14, :arglists (quote ([o k]))}, :name hyper.js/remove!, :variadic false, :file "src/out/hyper/js.cljs", :end-column 14, :method-params ([o k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o k]))}, log {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 15, :column 7, :end-line 15, :end-column 10, :arglists (quote ([a] [a b] [a b c] [a b c d] [a b c d e] [a b c d e f])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([a] [a b] [a b c] [a b c d] [a b c d e] [a b c d e f]), :arglists ([a] [a b] [a b c] [a b c d] [a b c d e] [a b c d e f]), :arglists-meta (nil nil nil nil nil nil)}}, :name hyper.js/log, :variadic false, :file "src/out/hyper/js.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([a] [a b] [a b c] [a b c d] [a b c d e] [a b c d e f]), :arglists ([a] [a b] [a b c] [a b c d] [a b c d e] [a b c d e f]), :arglists-meta (nil nil nil nil nil nil)}, :method-params ([a] [a b] [a b c] [a b c d] [a b c d e] [a b c d e f]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 6, :fn-var true, :arglists ([a] [a b] [a b c] [a b c d] [a b c d e] [a b c d e f])}, js+ {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 30, :column 7, :end-line 30, :end-column 10, :arglists (quote ([a] [a b] [a b & more])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}}, :name hyper.js/js+, :variadic true, :file "src/out/hyper/js.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists ([a] [a b] [a b & more])}, resize-dataurl {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 113, :column 7, :end-line 113, :end-column 21, :arglists (quote ([data width height]))}, :name hyper.js/resize-dataurl, :variadic false, :file "src/out/hyper/js.cljs", :end-column 21, :method-params ([data width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data width height]))}, array-unique-add {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 71, :column 7, :end-line 71, :end-column 23, :arglists (quote ([o v]))}, :name hyper.js/array-unique-add, :variadic false, :file "src/out/hyper/js.cljs", :end-column 23, :method-params ([o v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o v]))}, new-prototype-constructor {:name hyper.js/new-prototype-constructor, :file "src/out/hyper/js.cljs", :line 60, :column 1, :end-line 60, :end-column 31, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 60, :column 6, :end-line 60, :end-column 31}}, file-drop-event {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 124, :column 7, :end-line 124, :end-column 22, :arglists (quote ([e read-k f]))}, :name hyper.js/file-drop-event, :variadic false, :file "src/out/hyper/js.cljs", :end-column 22, :method-params ([e read-k f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 3, :fn-var true, :arglists (quote ([e read-k f]))}, element? {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 9, :column 7, :end-line 9, :end-column 15, :arglists (quote ([el]))}, :name hyper.js/element?, :variadic false, :file "src/out/hyper/js.cljs", :end-column 15, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, locals {:name hyper.js/locals, :file "src/out/hyper/js.cljs", :line 54, :column 1, :end-line 54, :end-column 12, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 54, :column 6, :end-line 54, :end-column 12}}, html-encode {:name hyper.js/html-encode, :file "src/out/hyper/js.cljs", :line 40, :column 1, :end-line 40, :end-column 17, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 40, :column 6, :end-line 40, :end-column 17}}, array-remove {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 67, :column 7, :end-line 67, :end-column 19, :arglists (quote ([o v]))}, :name hyper.js/array-remove, :variadic false, :file "src/out/hyper/js.cljs", :end-column 19, :method-params ([o v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o v]))}, js= {:name hyper.js/js=, :file "src/out/hyper/js.cljs", :line 34, :column 1, :end-line 34, :end-column 9, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 34, :column 6, :end-line 34, :end-column 9}}, download-file {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 107, :column 7, :end-line 107, :end-column 20, :arglists (quote ([s file-name file-type]))}, :name hyper.js/download-file, :variadic false, :file "src/out/hyper/js.cljs", :end-column 20, :method-params ([s file-name file-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s file-name file-type]))}, ajax {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 95, :column 7, :end-line 95, :end-column 11, :arglists (quote ([url f & fail])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(url f fail)], :arglists ([url f & fail]), :arglists-meta (nil)}}, :name hyper.js/ajax, :variadic true, :file "src/out/hyper/js.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(url f fail)], :arglists ([url f & fail]), :arglists-meta (nil)}, :method-params [(url f fail)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists ([url f & fail])}, ->style-sheet {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 85, :column 7, :end-line 85, :end-column 20, :arglists (quote ([el] [document el])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([el] [document el]), :arglists ([el] [document el]), :arglists-meta (nil nil)}}, :name hyper.js/->style-sheet, :variadic false, :file "src/out/hyper/js.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([el] [document el]), :arglists ([el] [document el]), :arglists-meta (nil nil)}, :method-params ([el] [document el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists ([el] [document el])}, active-input {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([]))}, :name hyper.js/active-input, :variadic false, :file "src/out/hyper/js.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, camel-style {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 81, :column 7, :end-line 81, :end-column 18, :arglists (quote ([s] [el s])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [el s]), :arglists ([s] [el s]), :arglists-meta (nil nil)}}, :name hyper.js/camel-style, :variadic false, :file "src/out/hyper/js.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [el s]), :arglists ([s] [el s]), :arglists-meta (nil nil)}, :method-params ([s] [el s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists ([s] [el s])}, js+2 {:name hyper.js/js+2, :file "src/out/hyper/js.cljs", :line 29, :column 1, :end-line 29, :end-column 20, :private true, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 29, :column 16, :end-line 29, :end-column 20, :private true}}, put-local {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([k v]))}, :name hyper.js/put-local, :variadic false, :file "src/out/hyper/js.cljs", :end-column 16, :method-params ([k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k v]))}, abs {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 13, :column 7, :end-line 13, :end-column 10, :arglists (quote ([n]))}, :name hyper.js/abs, :variadic false, :file "src/out/hyper/js.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, array-concat {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 75, :column 7, :end-line 75, :end-column 19, :arglists (quote ([v o]))}, :name hyper.js/array-concat, :variadic false, :file "src/out/hyper/js.cljs", :end-column 19, :method-params ([v o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v o]))}, get-local {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 25, :column 7, :end-line 25, :end-column 16, :arglists (quote ([k]))}, :name hyper.js/get-local, :variadic false, :file "src/out/hyper/js.cljs", :end-column 16, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, html-decode {:name hyper.js/html-decode, :file "src/out/hyper/js.cljs", :line 45, :column 1, :end-line 45, :end-column 17, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/js.cljs", :line 45, :column 6, :end-line 45, :end-column 17}}}}