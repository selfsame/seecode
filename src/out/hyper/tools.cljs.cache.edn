;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name hyper.tools, :imports nil, :requires nil, :uses nil, :defs {dissoc-in {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([m [k & ks]]))}, :name hyper.tools/dissoc-in, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 16, :method-params ([m p__18079]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m [k & ks]]))}, is* {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 23, :column 7, :end-line 23, :end-column 10, :arglists (quote ([v]))}, :name hyper.tools/is*, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 10, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, and* {:name hyper.tools/and*, :file "src/out/hyper/tools.cljs", :line 20, :column 1, :end-line 20, :end-column 11, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 20, :column 7, :end-line 20, :end-column 11}}, quintet? {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 13, :column 7, :end-line 13, :end-column 15, :arglists (quote ([col]))}, :name hyper.tools/quintet?, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 15, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, into* {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 19, :column 7, :end-line 19, :end-column 12, :arglists (quote ([col & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(col more)], :arglists ([col & more]), :arglists-meta (nil)}}, :name hyper.tools/into*, :variadic true, :file "src/out/hyper/tools.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(col more)], :arglists ([col & more]), :arglists-meta (nil)}, :method-params [(col more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists ([col & more])}, indexed-iterate {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 69, :column 7, :end-line 69, :end-column 22, :arglists (quote ([col f]))}, :name hyper.tools/indexed-iterate, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 22, :method-params ([col f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([col f]))}, solo? {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 9, :column 7, :end-line 9, :end-column 12, :arglists (quote ([col]))}, :name hyper.tools/solo?, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 12, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, quartet? {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([col]))}, :name hyper.tools/quartet?, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 15, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, vec-move {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 61, :column 7, :end-line 61, :end-column 15, :arglists (quote ([col idx offset]))}, :name hyper.tools/vec-move, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 15, :method-params ([col idx offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 3, :fn-var true, :arglists (quote ([col idx offset]))}, insert {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 46, :column 7, :end-line 46, :end-column 13, :arglists (quote ([vc idx & more])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(vc idx more)], :arglists ([vc idx & more]), :arglists-meta (nil)}}, :name hyper.tools/insert, :variadic true, :file "src/out/hyper/tools.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(vc idx more)], :arglists ([vc idx & more]), :arglists-meta (nil)}, :method-params [(vc idx more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists ([vc idx & more])}, vec-dissoc {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 55, :column 7, :end-line 55, :end-column 17, :arglists (quote ([col & idxs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(col idxs)], :arglists ([col & idxs]), :arglists-meta (nil)}}, :name hyper.tools/vec-dissoc, :variadic true, :file "src/out/hyper/tools.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(col idxs)], :arglists ([col & idxs]), :arglists-meta (nil)}, :method-params [(col idxs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists ([col & idxs])}, _count {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 5, :column 7, :end-line 5, :end-column 13, :arglists (quote ([v]))}, :name hyper.tools/_count, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, map-by {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 31, :column 7, :end-line 31, :end-column 13, :arglists (quote ([k col]))}, :name hyper.tools/map-by, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 13, :method-params ([k col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k col]))}, dissoc-all {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 40, :column 7, :end-line 40, :end-column 17, :arglists (quote ([d col-ks]))}, :name hyper.tools/dissoc-all, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 17, :method-params ([d col-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d col-ks]))}, or* {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 22, :column 7, :end-line 22, :end-column 10}, :name hyper.tools/or*, :variadic true, :file "src/out/hyper/tools.cljs", :end-column 10, :method-params ([args]), :protocol-impl nil, :arglists-meta (), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists nil}, combine {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 29, :column 7, :end-line 29, :end-column 14, :arglists (quote ([& maps])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(maps)], :arglists ([& maps]), :arglists-meta (nil)}}, :name hyper.tools/combine, :variadic true, :file "src/out/hyper/tools.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(maps)], :arglists ([& maps]), :arglists-meta (nil)}, :method-params [(maps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists ([& maps])}, triplet? {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 11, :column 7, :end-line 11, :end-column 15, :arglists (quote ([col]))}, :name hyper.tools/triplet?, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 15, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, dissoc-keys {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 42, :column 7, :end-line 42, :end-column 18, :arglists (quote ([d ks]))}, :name hyper.tools/dissoc-keys, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 18, :method-params ([d ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([d ks]))}, format-bytes {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 79, :column 7, :end-line 79, :end-column 19, :arglists (quote ([n]))}, :name hyper.tools/format-bytes, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 19, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, not* {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 21, :column 7, :end-line 21, :end-column 11}, :name hyper.tools/not*, :variadic true, :file "src/out/hyper/tools.cljs", :end-column 11, :method-params ([args]), :protocol-impl nil, :arglists-meta (), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists nil}, <* {:name hyper.tools/<*, :file "src/out/hyper/tools.cljs", :line 18, :column 1, :end-line 18, :end-column 9, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 18, :column 7, :end-line 18, :end-column 9}}, valid-idx {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 58, :column 7, :end-line 58, :end-column 16, :arglists (quote ([col n]))}, :name hyper.tools/valid-idx, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 16, :method-params ([col n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([col n]))}, slice {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 51, :column 7, :end-line 51, :end-column 12, :arglists (quote ([a b] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a b] [a b c]), :arglists ([a b] [a b c]), :arglists-meta (nil nil)}}, :name hyper.tools/slice, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a b] [a b c]), :arglists ([a b] [a b c]), :arglists-meta (nil nil)}, :method-params ([a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 3, :fn-var true, :arglists ([a b] [a b c])}, multiple? {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([col]))}, :name hyper.tools/multiple?, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 16, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, duo? {:protocol-inline nil, :meta {:file "/home/selfsame/dev/seecode/src/out/hyper/tools.cljs", :line 10, :column 7, :end-line 10, :end-column 11, :arglists (quote ([col]))}, :name hyper.tools/duo?, :variadic false, :file "src/out/hyper/tools.cljs", :end-column 11, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{composition data :else fancy vectors tricks iteration maps predicates}, :order [predicates :else composition data tricks maps vectors iteration fancy]}, :doc nil}